name: Build RSDKv5

on: [ push, pull_request, workflow_dispatch ]

jobs:
  Build_ps3:
    runs-on: ubuntu-22.04
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure environment
      run: |
        echo "PS3DEV=/usr/local/ps3dev" >> $GITHUB_ENV
        echo "PSL1GHT=/usr/local/ps3dev" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=/usr/local/ps3dev/portlibs/ppu/lib/pkgconfig" >> $GITHUB_ENV
        echo "sha_name=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_ENV
        
    - name: Download PSL1GHT Toolchain
      run: |
        curl -sL https://github.com/StrawFox64/StrawFox64.github.io/releases/download/psl1ght-gcc7.5.0-ubuntu-22.04/ps3dev.tar.gz | sudo tar xvz -C /usr/local
  
    - name: Download dependencies (RSDK)
      run: |
        git clone https://github.com/nothings/stb.git
        git clone https://github.com/leethomason/tinyxml2.git
        git clone https://github.com/StrawFox64/Sonic-Mania-Decompilation.git
        
    - name: Move dependencies (RSDK)
      run: |
        cd Sonic-Mania-Decompilation
        mv SonicMania ../RSDKv5 && cd ..
        mv tinyxml2/* dependencies/all/tinyxml2
        mv stb/* dependencies/all/stb_vorbis
        
    - name: Build self
      run: |
        cd .github/workflows && make && mv RSDKv5.self EBOOT.BIN
        
    - name: Push package artifact
      uses: actions/upload-artifact@v3
      with:
        name: RSDKv5_${{ env.sha_name }}
        path: .github/workflows/EBOOT.BIN
        if-no-files-found: error
        # don't keep artifacts for too long
        retention-days: 7

## Original Workflow
#name: Build RSDKv5

#on: workflow_dispatch

# each artifact is like 15MB so we'll start by only doing it manually
# on:
#   push:
#     branches:
#       - master

# TODO: readd with: submodules: recursive once we can
#
#jobs:
#  v5-windows:
#    runs-on: windows-2022
#    defaults:
#      run:
#        shell: msys2 {0}
#    steps:
#      - name: Checkout 
#        uses: actions/checkout@v2
#        with:
#          submodules: recursive
#      - name: Setup MSYS2
#        uses: msys2/setup-msys2@v2
#        with:
#          msystem: MINGW32
#          update: true
#          install: pkg-config make git mingw-w64-i686-gcc mingw-w64-i686-libogg mingw-w64-i686-libtheora
#      - name: Build RSDKv5 + U
#        run: |
#          make -j8 RSDK_ONLY=1 AUTOBUILD=1
#          make -j8 clean-rsdk
#          make -j8 RSDK_ONLY=1 RSDK_REVISION=3 AUTOBUILD=1
#      - name: Move artifacts
#        run: |
#          mkdir artifacts
#          mv ./bin/Windows/DX9/*.exe ./artifacts
#      - name: Upload artifacts
#        uses: actions/upload-artifact@v1.0.0
#        with:
#          name: v5-windows
#          path: artifacts
#  v5-windows-x64:
#    runs-on: windows-2022
#    defaults:
#      run:
#        shell: msys2 {0}
#    steps:
#      - name: Checkout 
#        uses: actions/checkout@v2
#        with:
#          submodules: recursive
#      - name: Setup MSYS2
#        uses: msys2/setup-msys2@v2
#        with:
#          msystem: MINGW64
#          update: true
#          install: pkg-config make git mingw-w64-x86_64-gcc mingw-w64-x86_64-SDL2 mingw-w64-x86_64-libogg mingw-w64-x86_64-libtheora
#      - name: Build RSDKv5 + U
#        run: |
#          make -j8 RSDK_ONLY=1 AUTOBUILD=1
#          make -j8 clean-rsdk
#          make -j8 RSDK_ONLY=1 RSDK_REVISION=3 AUTOBUILD=1
#      - name: Move artifacts
#        run: |
#          mkdir artifacts
#          mv ./bin/Windows/DX9/*.exe ./artifacts
#      - name: Upload artifacts
#        uses: actions/upload-artifact@v1.0.0
#        with:
#          name: v5-windows-x64
#          path: artifacts
#  v5-linux:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout 
#        uses: actions/checkout@v2
#        with:
#          submodules: recursive
#      - name: Install dependencies
#        run: |
#          sudo apt-get update
#          sudo apt-get install libogg-dev libsdl2-dev libtheora-dev libglew-dev libglfw3-dev
#      - name: Build RSDKv5 + U OGL
#        run: |
#          make -j8 RSDK_ONLY=1 AUTOBUILD=1
#          make -j8 clean-rsdk
#          make -j8 RSDK_ONLY=1 RSDK_REVISION=3 AUTOBUILD=1
#      - name: Build RSDKv5 + U SDL2
#        run: |
#          make -j8 RSDK_ONLY=1 SUBSYSTEM=SDL2 AUTOBUILD=1
#          make -j8 clean-rsdk
#          make -j8 RSDK_ONLY=1 SUBSYSTEM=SDL2 RSDK_REVISION=3 AUTOBUILD=1
#      - name: Upload artifacts
#        uses: actions/upload-artifact@v1.0.0
#        with:
#          name: v5-linux
#          path: bin/Linux
